# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  linters:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true
#      - name: Ruby gem cache
#        uses: actions/cache@v1
#        with:
#          path: vendor/bundle
#          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-gems-
#      - name: Install gems
#        run: |
#          bundle config path vendor/bundle
#          bundle install --jobs 4 --retry 3

      - name: Rubocop
        run: bundle exec rubocop --parallel
      - name: Bundle Audit
        run: bundle exec bundler-audit --update
      - name: Brakeman
        run: bundle exec brakeman -q

  test:
    name: Unit Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.1-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true

      - name: Install required apt packages
        run: sudo apt-get -yqq install libpq-dev
#      - uses: actions/cache@v2
#        with:
#          path: vendor/bundle
#          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-gems-
#      - name: Install dependencies
#        run: |
#          bundle config path vendor/bundle
#          bundle install --jobs 4 --retry 3

      - name: Setup DB
        env:
          PGHOST: 127.0.0.1
          PGUSER: postgres
          PGPASSWORD: postgres
          RAILS_ENV: test
        run: bundle exec rake db:setup

      - name: Run tests
        env:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: postgres
          PGPASSWORD: postgres
          COVERAGE: true
        run: bundle exec rspec
